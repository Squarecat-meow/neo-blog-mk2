// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  userId        String  @unique
  password      String
  nickname      String?
  profileImgUrl String?
  introduction  String?
  refreshToken  String?
  ownedCategories   Category[]
  posts         Post[]
}

model Post {
  id              Int       @id @default(autoincrement())
  author          User      @relation(fields: [authorId], references: [userId], onDelete: Cascade)
  authorId        String
  category        Category  @relation(fields: [categoryId], references: [id])
  categoryId      Int
  title           String
  thumbnailImgUrl String?
  body            String
  summary         String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime?
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]

  categoryOwner       User    @relation(fields: [categoryOwnerId], references: [id], onDelete: Cascade)
  categoryOwnerId     String

  parentCategoryId  Int?
  parentCategory  Category?     @relation("CategoryHierarchy", fields: [parentCategoryId], references: [id])
  subCategories   Category[]    @relation("CategoryHierarchy")
}
